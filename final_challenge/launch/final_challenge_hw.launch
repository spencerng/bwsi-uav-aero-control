<launch>
  <!-- node for ar tag tracking -->
  <arg name="marker_size" default="26.99" />

<arg name="max_track_error" default="0.2" />

<arg name="cam_image_topic" default="/camera/rgb/image_rect_color/compressed" />
<arg name="cam_info_topic" default="/camera/rgb/camera_info" />     
<arg name="output_frame" default="camera_rgb_optical_frame" />

<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen" args="$(arg marker_size)  $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />
  <node pkg="rosservice" type="rosservice" name="global_loc" args="call --wait /mavros/setpoint_velocity/mav_frame 8"/>
  
  <!-- Launch mavros -->
  <arg name="fcu_url" default="udp://127.0.0.1:14550@" />
  <arg name="gcs_url" default="" />
  <arg name="tgt_system" default="1" />
  <arg name="tgt_component" default="1" />
  <arg name="log_output" default="screen" />
  <arg name="fcu_protocol" default="v2.0" />
  <arg name="respawn_mavros" default="false" />

  <node name="velocity_handler" pkg="aero_control" type="velocity_handler.py" output="screen"/>
  <node name="ar_obstacle_avoid_tracker" pkg="aero_control" type="ar_obstacle_avoid_tracker.py" output="screen"/>
  <node name="line_detector" pkg="aero_control" type="detector.py" output="screen"/>
  <node name="line_tracker" pkg="aero_control" type="line_tracker.py" output="screen"/>


  <include file="$(find mavros)/launch/node.launch">
          <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
          <arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />
          <arg name="fcu_url" value="$(arg fcu_url)" />
          <arg name="gcs_url" value="$(arg gcs_url)" />
          <arg name="tgt_system" value="$(arg tgt_system)" />
          <arg name="tgt_component" value="$(arg tgt_component)" />
          <arg name="log_output" value="$(arg log_output)" />
          <arg name="fcu_protocol" value="$(arg fcu_protocol)" />
          <arg name="respawn_mavros" default="$(arg respawn_mavros)" />
  </include>


  <!-- "camera" should be a user friendly string to uniquely identify the device namespace.
       All topics are pushed down into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"          default="camera" />

  <!-- Type of RealSense camera -->
  <arg name="camera_type"     default="R200" />

  <!-- "serial_no" or "usb_port_id" should be a unique identifier to connect to a device -->
  <arg name="serial_no"     default="" />
  <arg name="usb_port_id"   default="" /> <!-- USB "Bus#-Port#" -->

  <!-- Best know configuration for generating depth registered point cloud. -->
  <arg name="mode"            default="manual" />
  <arg name="color_width"     default="640" />
  <arg name="color_height"    default="480" />
  <arg name="depth_width"     default="480" />
  <arg name="depth_height"    default="360" />
  <arg name="depth_fps"       default="30" />
  <arg name="color_fps"       default="30" />

  <!-- Arguments for remapping all device namespaces -->
  <arg name="depth"            default="depth" />
  <arg name="rgb"              default="rgb" />
  <arg name="ir"               default="ir" />
  <arg name="depth_registered" default="depth_registered" />
  <arg name="projector"        default="projector" />

  <!-- Size of message queue for synchronizing subscribed topics in depth_image_proc package.
       Increase this value for higher resolution and/or frame rates.
       If the depth_registered pointcloud topic generated by the depth_image_proc package does not contain data,
       increase this value further. -->
  <arg name="queue_size"       default="100" />
  <param name="$(arg camera)/points_xyzrgb_sw_registered/queue_size" type="int" value="$(arg queue_size)" />

  <!-- Optionally suppress loading the driver nodelet. Useful while playing back recorded raw data from a bag.-->
  <arg name="load_driver"   default="true" />
  <arg name="publish_tf"    default="true" />

  <!-- Processing Modules -->
  <arg name="rgb_processing"                  default="true"/>
  <arg name="debayer_processing"              default="true" />
  <arg name="ir_processing"                   default="true"/>
  <arg name="depth_processing"                default="true"/>
  <arg name="depth_registered_processing"     default="true"/>
  <arg name="disparity_processing"            default="true"/>
  <arg name="disparity_registered_processing" default="true"/>
  <arg name="hw_registered_processing"        default="false" />
  <arg name="sw_registered_processing"        default="true" />

  <!-- Disable respawn topics by default -->
  <arg name="respawn" default="false" />

  <!-- Worker threads for the nodelet manager -->
  <arg name="num_worker_threads" default="4" />

  

</launch>
